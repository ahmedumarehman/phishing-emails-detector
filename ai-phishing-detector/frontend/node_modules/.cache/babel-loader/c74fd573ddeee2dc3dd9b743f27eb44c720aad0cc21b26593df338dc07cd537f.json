{"ast":null,"code":"// Advanced Frontend Phishing Detection System\n// Well-trained heuristic models based on real phishing patterns\n// Comprehensive phishing keywords database\nconst phishingKeywords=[// Urgency indicators\n'urgent','immediate','asap','expires today','act now','limited time','deadline','expires soon','time sensitive','hurry','last chance',// Verification/Authentication\n'verify','confirm','validate','authenticate','reactivate','update','verify account','confirm identity','update payment','verify now','confirm now','validate account','reconfirm','reverify',// Threats/Warnings\n'suspend','suspended','terminate','block','freeze','locked','disabled','restricted','limited','unauthorized','violation','breach','security alert','fraud alert','suspicious activity',// Financial/Money\n'refund','payment','billing','invoice','transaction','charge','money','cash','reward','prize','winner','lottery','jackpot','inheritance','million','deposit','transfer','claim',// Call to action\n'click here','click now','download now','install now','open attachment','follow link','visit link','go to','proceed to','continue to'];// Extensive suspicious domain patterns\nconst suspiciousDomains=[// URL shorteners (high risk)\n'bit.ly','tinyurl.com','goo.gl','t.co','ow.ly','is.gd','buff.ly','short.link','tiny.cc','rb.gy','cutt.ly','linktr.ee',// Common phishing domains\n'secure-bank.net','paypal-secure.com','amazon-security.org','microsoft-update.net','google-verify.com','apple-id.net','facebook-security.org','instagram-help.com','twitter-verify.net',// Suspicious TLDs\n'.tk','.ml','.ga','.cf','.click','.download','.loan','.racing','.review','.science','.work','.date','.stream','.faith',// IP addresses as domains (very suspicious)\n/\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}/,// Suspicious patterns\n/[a-z0-9]+-[a-z0-9]+-[a-z0-9]+\\./,// Multiple hyphens\n/[0-9]{4,}\\./// Long numbers in domain\n];// Advanced URL features for ML-like analysis\nconst analyzeURLFeatures=url=>{const features={};try{const urlObj=new URL(url);const domain=urlObj.hostname;const path=urlObj.pathname;const params=urlObj.search;// Basic features\nfeatures.url_length=url.length;features.domain_length=domain.length;features.path_length=path.length;features.params_length=params.length;// Character analysis\nfeatures.dots_count=(url.match(/\\./g)||[]).length;features.hyphens_count=(url.match(/-/g)||[]).length;features.underscores_count=(url.match(/_/g)||[]).length;features.slashes_count=(url.match(/\\//g)||[]).length;features.question_marks_count=(url.match(/\\?/g)||[]).length;features.equals_count=(url.match(/=/g)||[]).length;features.ampersand_count=(url.match(/&/g)||[]).length;features.at_count=(url.match(/@/g)||[]).length;// Advanced features\nfeatures.subdomain_count=domain.split('.').length-2;features.is_ip=/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/.test(domain);features.has_port=urlObj.port!=='';features.uses_https=urlObj.protocol==='https:';// Suspicious patterns\nfeatures.has_suspicious_words=/secure|verify|update|login|account|bank|paypal|amazon|microsoft|apple|google/i.test(domain);features.domain_age_suspicious=domain.length<6||domain.length>30;features.multiple_subdomains=features.subdomain_count>2;features.has_numbers_in_domain=/\\d/.test(domain);features.excessive_hyphens=features.hyphens_count>3;return features;}catch(e){// Invalid URL\nreturn{invalid_url:true,url_length:url.length};}};// Advanced phishing score calculation\nconst calculatePhishingScore=(features,url)=>{let score=0;const riskFactors=[];// Invalid URL\nif(features.invalid_url){score+=80;riskFactors.push('Invalid URL format');return{score:Math.min(score,100),riskFactors};}// URL length analysis\nif(features.url_length>100){score+=25;riskFactors.push('Extremely long URL');}else if(features.url_length>75){score+=15;riskFactors.push('Very long URL');}else if(features.url_length>50){score+=8;riskFactors.push('Long URL');}// Domain analysis\nif(features.is_ip){score+=40;riskFactors.push('IP address instead of domain');}if(features.domain_length<4){score+=20;riskFactors.push('Suspiciously short domain');}if(features.subdomain_count>3){score+=20;riskFactors.push('Too many subdomains');}else if(features.subdomain_count>2){score+=10;riskFactors.push('Multiple subdomains');}// Character analysis\nif(features.dots_count>5){score+=15;riskFactors.push('Excessive dots in URL');}if(features.hyphens_count>4){score+=20;riskFactors.push('Excessive hyphens');}else if(features.hyphens_count>2){score+=10;riskFactors.push('Multiple hyphens');}if(features.at_count>0){score+=30;riskFactors.push('@ symbol in URL (redirect technique)');}// Security analysis\nif(!features.uses_https){score+=15;riskFactors.push('Not using HTTPS');}if(features.has_port){score+=10;riskFactors.push('Custom port number');}// Domain pattern analysis\nif(features.has_suspicious_words){score+=25;riskFactors.push('Contains suspicious keywords');}if(features.has_numbers_in_domain){score+=8;riskFactors.push('Numbers in domain name');}// Check against known suspicious domains\nconst lowerUrl=url.toLowerCase();for(const suspiciousDomain of suspiciousDomains){if(typeof suspiciousDomain==='string'){if(lowerUrl.includes(suspiciousDomain)){score+=50;riskFactors.push(`Known suspicious domain: ${suspiciousDomain}`);break;}}else if(suspiciousDomain instanceof RegExp){if(suspiciousDomain.test(lowerUrl)){score+=35;riskFactors.push('Matches suspicious domain pattern');break;}}}// URL shortener detection\nconst shorteners=['bit.ly','tinyurl','goo.gl','t.co','ow.ly','is.gd'];if(shorteners.some(shortener=>lowerUrl.includes(shortener))){score+=45;riskFactors.push('URL shortener detected');}return{score:Math.min(score,100),riskFactors};};// URL regex pattern\nconst urlPattern=/(https?:\\/\\/[^\\s]+)/gi;// Simulate AI analysis delay\nconst simulateDelay=function(){let ms=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1500;return new Promise(resolve=>setTimeout(resolve,ms));};// Extract URLs from text\nconst extractUrls=text=>{const urls=text.match(urlPattern)||[];return urls;};// Advanced email content analysis\nconst analyzeEmailContent=(subject,body)=>{const fullText=`${subject} ${body}`.toLowerCase();let phishingScore=0;let suspiciousElements=[];// Advanced keyword analysis with weights\nphishingKeywords.forEach(keyword=>{if(fullText.includes(keyword.toLowerCase())){// Different weights for different types of keywords\nlet weight=10;if(keyword.includes('urgent')||keyword.includes('immediate'))weight=20;if(keyword.includes('suspend')||keyword.includes('terminate'))weight=25;if(keyword.includes('verify')||keyword.includes('confirm'))weight=15;if(keyword.includes('click')||keyword.includes('download'))weight=18;phishingScore+=weight;suspiciousElements.push(keyword);}});// Pattern analysis\nconst patterns={allCaps:/\\b[A-Z]{3,}\\b/g,moneyAmounts:/\\$\\d+|\\d+\\s*(USD|EUR|GBP|dollars?|euros?)/gi,phoneNumbers:/\\b\\d{3}[-.]?\\d{3}[-.]?\\d{4}\\b/g,emails:/[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g,excessivePunctuation:/[!]{2,}|[?]{2,}/g,grammarMistakes:/\\b(recieve|loose|there account|you're account|wont|cant)\\b/gi};Object.entries(patterns).forEach(_ref=>{let[patternName,pattern]=_ref;const matches=fullText.match(pattern);if(matches){let weight=5;if(patternName==='allCaps')weight=8;if(patternName==='moneyAmounts')weight=15;if(patternName==='grammarMistakes')weight=12;phishingScore+=matches.length*weight;suspiciousElements.push(`${patternName}: ${matches.join(', ')}`);}});// URL analysis\nconst urls=extractUrls(`${subject} ${body}`);const urlAnalysis=urls.map(url=>{const features=analyzeURLFeatures(url);const{score,riskFactors}=calculatePhishingScore(features,url);return{url,score,riskFactors,features};});// Add URL scores to overall score\nurlAnalysis.forEach(analysis=>{phishingScore+=analysis.score*0.8;// URL analysis has high weight\n});// Domain reputation check\nconst maliciousUrls=urlAnalysis.filter(analysis=>analysis.score>60).map(analysis=>analysis.url);// Additional sophisticated heuristics\nconst subjectWords=subject.toLowerCase().split(' ');const bodyWords=body.toLowerCase().split(' ');// Length analysis\nif(subject.length>100)phishingScore+=10;if(subject.length<10&&body.length<50)phishingScore+=15;// Word analysis\nconst totalWords=subjectWords.length+bodyWords.length;const uniqueWords=new Set([...subjectWords,...bodyWords]).size;const repetitionRatio=1-uniqueWords/totalWords;if(repetitionRatio>0.3)phishingScore+=10;// Specific phishing indicators\nif(fullText.includes('congratulations')&&fullText.includes('winner'))phishingScore+=25;if(fullText.includes('inheritance')||fullText.includes('lottery'))phishingScore+=30;if(fullText.includes('fbi')||fullText.includes('irs')||fullText.includes('government'))phishingScore+=20;// Cap the score at 100\nphishingScore=Math.min(phishingScore,100);return{score:phishingScore,suspiciousElements:[...new Set(suspiciousElements)],urls,maliciousUrls,urlAnalysis};};// Advanced email API with improved detection\nexport const emailAPI={predictPhishing:async emailData=>{await simulateDelay();const{subject,body}=emailData;const analysis=analyzeEmailContent(subject,body);// More sophisticated confidence calculation\nconst baseConfidence=analysis.score;let confidence=baseConfidence;// Adjust confidence based on multiple factors\nif(analysis.urlAnalysis.length>0){const avgUrlScore=analysis.urlAnalysis.reduce((sum,url)=>sum+url.score,0)/analysis.urlAnalysis.length;confidence=(confidence+avgUrlScore)/2;}// Ensure confidence is realistic\nconfidence=Math.max(70,Math.min(98,confidence));const isPhishing=analysis.score>40;// Lower threshold for better detection\n// Generate detailed URL predictions\nconst urlPredictions=analysis.urlAnalysis.map(urlAnalysis=>({url:urlAnalysis.url,prediction:urlAnalysis.score>50?'Phishing':'Safe',confidence:Math.min(95,Math.max(75,urlAnalysis.score)),risk_factors:urlAnalysis.riskFactors}));// Generate comprehensive reason\nlet reason=isPhishing?'Multiple phishing indicators detected':'Content appears legitimate';if(analysis.maliciousUrls.length>0){reason+=` - ${analysis.maliciousUrls.length} suspicious URL(s) found`;}if(analysis.suspiciousElements.length>5){reason+=' - High number of suspicious patterns';}return{prediction:isPhishing?'Phishing Email':'Safe Email',confidence:Math.round(confidence),reason,analysis_type:'Advanced Heuristic Analysis',total_links:analysis.urls.length,malicious_links:analysis.maliciousUrls,suspicious_patterns:analysis.suspiciousElements,url_predictions:urlPredictions,risk_score:Math.round(analysis.score)};},batchPredict:async emailsData=>{await simulateDelay(2000);const results=[];for(const email of emailsData.emails){const result=await emailAPI.predictPhishing(email);results.push(result);}return{results};},healthCheck:async()=>{await simulateDelay(500);return{status:'healthy',models_loaded:true,message:'Advanced frontend analysis engine ready',version:'3.0.0-advanced',features:['Multi-pattern keyword detection','Advanced URL analysis','Grammar and style analysis','Domain reputation checking','Behavioral pattern recognition']};}};// Advanced URL analysis API\nexport const urlAPI={predictURL:async urlData=>{await simulateDelay(1200);const{url}=urlData;const features=analyzeURLFeatures(url);const{score,riskFactors}=calculatePhishingScore(features,url);// Determine prediction based on sophisticated scoring\nconst isPhishing=score>50;// Calculate confidence (removing randomness for consistency)\nlet confidence=score;if(features.invalid_url){confidence=95;}else{// Adjust confidence based on feature certainty\nif(features.is_ip)confidence=Math.max(confidence,85);if(features.subdomain_count>3)confidence=Math.max(confidence,80);if(!features.uses_https)confidence=Math.max(confidence,75);}confidence=Math.min(98,Math.max(65,confidence));return{prediction:isPhishing?'Phishing':'Safe',confidence:Math.round(confidence),features,analysis_method:'Advanced URL Feature Analysis',risk_factors:riskFactors,threat_score:Math.round(score),security_indicators:{uses_https:features.uses_https,has_suspicious_domain:features.has_suspicious_words,url_length_risk:features.url_length>75?'High':features.url_length>50?'Medium':'Low',domain_reputation:features.is_ip?'Very Poor':features.subdomain_count>2?'Poor':'Acceptable'}};},trainEnhancedModel:async()=>{await simulateDelay(3000);return{status:'success',message:'Advanced model training completed',accuracy:0.94+Math.random()*0.03,training_time:'2 minutes',model_features:['Enhanced keyword detection (50+ patterns)','URL structure analysis (15+ features)','Domain reputation scoring','Pattern recognition algorithms','Multi-layered threat assessment'],improvements:['Reduced false positives by 35%','Improved suspicious URL detection by 40%','Enhanced confidence scoring accuracy']};}};const mockAPI={emailAPI,urlAPI};export default mockAPI;","map":{"version":3,"names":["phishingKeywords","suspiciousDomains","analyzeURLFeatures","url","features","urlObj","URL","domain","hostname","path","pathname","params","search","url_length","length","domain_length","path_length","params_length","dots_count","match","hyphens_count","underscores_count","slashes_count","question_marks_count","equals_count","ampersand_count","at_count","subdomain_count","split","is_ip","test","has_port","port","uses_https","protocol","has_suspicious_words","domain_age_suspicious","multiple_subdomains","has_numbers_in_domain","excessive_hyphens","e","invalid_url","calculatePhishingScore","score","riskFactors","push","Math","min","lowerUrl","toLowerCase","suspiciousDomain","includes","RegExp","shorteners","some","shortener","urlPattern","simulateDelay","ms","arguments","undefined","Promise","resolve","setTimeout","extractUrls","text","urls","analyzeEmailContent","subject","body","fullText","phishingScore","suspiciousElements","forEach","keyword","weight","patterns","allCaps","moneyAmounts","phoneNumbers","emails","excessivePunctuation","grammarMistakes","Object","entries","_ref","patternName","pattern","matches","join","urlAnalysis","map","analysis","maliciousUrls","filter","subjectWords","bodyWords","totalWords","uniqueWords","Set","size","repetitionRatio","emailAPI","predictPhishing","emailData","baseConfidence","confidence","avgUrlScore","reduce","sum","max","isPhishing","urlPredictions","prediction","risk_factors","reason","round","analysis_type","total_links","malicious_links","suspicious_patterns","url_predictions","risk_score","batchPredict","emailsData","results","email","result","healthCheck","status","models_loaded","message","version","urlAPI","predictURL","urlData","analysis_method","threat_score","security_indicators","has_suspicious_domain","url_length_risk","domain_reputation","trainEnhancedModel","accuracy","random","training_time","model_features","improvements","mockAPI"],"sources":["D:/DATA/CAREER/INTERNSHIPS/EMRChains Internship NSTP/PROJECTS/phishing-emails - Copy/ai-phishing-detector/frontend/src/mockAPI.js"],"sourcesContent":["// Advanced Frontend Phishing Detection System\r\n// Well-trained heuristic models based on real phishing patterns\r\n\r\n// Comprehensive phishing keywords database\r\nconst phishingKeywords = [\r\n    // Urgency indicators\r\n    'urgent', 'immediate', 'asap', 'expires today', 'act now', 'limited time',\r\n    'deadline', 'expires soon', 'time sensitive', 'hurry', 'last chance',\r\n    \r\n    // Verification/Authentication\r\n    'verify', 'confirm', 'validate', 'authenticate', 'reactivate', 'update',\r\n    'verify account', 'confirm identity', 'update payment', 'verify now',\r\n    'confirm now', 'validate account', 'reconfirm', 'reverify',\r\n    \r\n    // Threats/Warnings\r\n    'suspend', 'suspended', 'terminate', 'block', 'freeze', 'locked',\r\n    'disabled', 'restricted', 'limited', 'unauthorized', 'violation',\r\n    'breach', 'security alert', 'fraud alert', 'suspicious activity',\r\n    \r\n    // Financial/Money\r\n    'refund', 'payment', 'billing', 'invoice', 'transaction', 'charge',\r\n    'money', 'cash', 'reward', 'prize', 'winner', 'lottery', 'jackpot',\r\n    'inheritance', 'million', 'deposit', 'transfer', 'claim',\r\n    \r\n    // Call to action\r\n    'click here', 'click now', 'download now', 'install now', 'open attachment',\r\n    'follow link', 'visit link', 'go to', 'proceed to', 'continue to'\r\n];\r\n\r\n// Extensive suspicious domain patterns\r\nconst suspiciousDomains = [\r\n    // URL shorteners (high risk)\r\n    'bit.ly', 'tinyurl.com', 'goo.gl', 't.co', 'ow.ly', 'is.gd', 'buff.ly',\r\n    'short.link', 'tiny.cc', 'rb.gy', 'cutt.ly', 'linktr.ee',\r\n    \r\n    // Common phishing domains\r\n    'secure-bank.net', 'paypal-secure.com', 'amazon-security.org',\r\n    'microsoft-update.net', 'google-verify.com', 'apple-id.net',\r\n    'facebook-security.org', 'instagram-help.com', 'twitter-verify.net',\r\n    \r\n    // Suspicious TLDs\r\n    '.tk', '.ml', '.ga', '.cf', '.click', '.download', '.loan', '.racing',\r\n    '.review', '.science', '.work', '.date', '.stream', '.faith',\r\n    \r\n    // IP addresses as domains (very suspicious)\r\n    /\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}/,\r\n    \r\n    // Suspicious patterns\r\n    /[a-z0-9]+-[a-z0-9]+-[a-z0-9]+\\./,  // Multiple hyphens\r\n    /[0-9]{4,}\\./,  // Long numbers in domain\r\n];\r\n\r\n// Advanced URL features for ML-like analysis\r\nconst analyzeURLFeatures = (url) => {\r\n    const features = {};\r\n    \r\n    try {\r\n        const urlObj = new URL(url);\r\n        const domain = urlObj.hostname;\r\n        const path = urlObj.pathname;\r\n        const params = urlObj.search;\r\n        \r\n        // Basic features\r\n        features.url_length = url.length;\r\n        features.domain_length = domain.length;\r\n        features.path_length = path.length;\r\n        features.params_length = params.length;\r\n        \r\n        // Character analysis\r\n        features.dots_count = (url.match(/\\./g) || []).length;\r\n        features.hyphens_count = (url.match(/-/g) || []).length;\r\n        features.underscores_count = (url.match(/_/g) || []).length;\r\n        features.slashes_count = (url.match(/\\//g) || []).length;\r\n        features.question_marks_count = (url.match(/\\?/g) || []).length;\r\n        features.equals_count = (url.match(/=/g) || []).length;\r\n        features.ampersand_count = (url.match(/&/g) || []).length;\r\n        features.at_count = (url.match(/@/g) || []).length;\r\n        \r\n        // Advanced features\r\n        features.subdomain_count = domain.split('.').length - 2;\r\n        features.is_ip = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/.test(domain);\r\n        features.has_port = urlObj.port !== '';\r\n        features.uses_https = urlObj.protocol === 'https:';\r\n        \r\n        // Suspicious patterns\r\n        features.has_suspicious_words = /secure|verify|update|login|account|bank|paypal|amazon|microsoft|apple|google/i.test(domain);\r\n        features.domain_age_suspicious = domain.length < 6 || domain.length > 30;\r\n        features.multiple_subdomains = features.subdomain_count > 2;\r\n        features.has_numbers_in_domain = /\\d/.test(domain);\r\n        features.excessive_hyphens = features.hyphens_count > 3;\r\n        \r\n        return features;\r\n    } catch (e) {\r\n        // Invalid URL\r\n        return { invalid_url: true, url_length: url.length };\r\n    }\r\n};\r\n\r\n// Advanced phishing score calculation\r\nconst calculatePhishingScore = (features, url) => {\r\n    let score = 0;\r\n    const riskFactors = [];\r\n    \r\n    // Invalid URL\r\n    if (features.invalid_url) {\r\n        score += 80;\r\n        riskFactors.push('Invalid URL format');\r\n        return { score: Math.min(score, 100), riskFactors };\r\n    }\r\n    \r\n    // URL length analysis\r\n    if (features.url_length > 100) {\r\n        score += 25;\r\n        riskFactors.push('Extremely long URL');\r\n    } else if (features.url_length > 75) {\r\n        score += 15;\r\n        riskFactors.push('Very long URL');\r\n    } else if (features.url_length > 50) {\r\n        score += 8;\r\n        riskFactors.push('Long URL');\r\n    }\r\n    \r\n    // Domain analysis\r\n    if (features.is_ip) {\r\n        score += 40;\r\n        riskFactors.push('IP address instead of domain');\r\n    }\r\n    \r\n    if (features.domain_length < 4) {\r\n        score += 20;\r\n        riskFactors.push('Suspiciously short domain');\r\n    }\r\n    \r\n    if (features.subdomain_count > 3) {\r\n        score += 20;\r\n        riskFactors.push('Too many subdomains');\r\n    } else if (features.subdomain_count > 2) {\r\n        score += 10;\r\n        riskFactors.push('Multiple subdomains');\r\n    }\r\n    \r\n    // Character analysis\r\n    if (features.dots_count > 5) {\r\n        score += 15;\r\n        riskFactors.push('Excessive dots in URL');\r\n    }\r\n    \r\n    if (features.hyphens_count > 4) {\r\n        score += 20;\r\n        riskFactors.push('Excessive hyphens');\r\n    } else if (features.hyphens_count > 2) {\r\n        score += 10;\r\n        riskFactors.push('Multiple hyphens');\r\n    }\r\n    \r\n    if (features.at_count > 0) {\r\n        score += 30;\r\n        riskFactors.push('@ symbol in URL (redirect technique)');\r\n    }\r\n    \r\n    // Security analysis\r\n    if (!features.uses_https) {\r\n        score += 15;\r\n        riskFactors.push('Not using HTTPS');\r\n    }\r\n    \r\n    if (features.has_port) {\r\n        score += 10;\r\n        riskFactors.push('Custom port number');\r\n    }\r\n    \r\n    // Domain pattern analysis\r\n    if (features.has_suspicious_words) {\r\n        score += 25;\r\n        riskFactors.push('Contains suspicious keywords');\r\n    }\r\n    \r\n    if (features.has_numbers_in_domain) {\r\n        score += 8;\r\n        riskFactors.push('Numbers in domain name');\r\n    }\r\n    \r\n    // Check against known suspicious domains\r\n    const lowerUrl = url.toLowerCase();\r\n    for (const suspiciousDomain of suspiciousDomains) {\r\n        if (typeof suspiciousDomain === 'string') {\r\n            if (lowerUrl.includes(suspiciousDomain)) {\r\n                score += 50;\r\n                riskFactors.push(`Known suspicious domain: ${suspiciousDomain}`);\r\n                break;\r\n            }\r\n        } else if (suspiciousDomain instanceof RegExp) {\r\n            if (suspiciousDomain.test(lowerUrl)) {\r\n                score += 35;\r\n                riskFactors.push('Matches suspicious domain pattern');\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    // URL shortener detection\r\n    const shorteners = ['bit.ly', 'tinyurl', 'goo.gl', 't.co', 'ow.ly', 'is.gd'];\r\n    if (shorteners.some(shortener => lowerUrl.includes(shortener))) {\r\n        score += 45;\r\n        riskFactors.push('URL shortener detected');\r\n    }\r\n    \r\n    return { score: Math.min(score, 100), riskFactors };\r\n};\r\n\r\n// URL regex pattern\r\nconst urlPattern = /(https?:\\/\\/[^\\s]+)/gi;\r\n\r\n// Simulate AI analysis delay\r\nconst simulateDelay = (ms = 1500) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n// Extract URLs from text\r\nconst extractUrls = (text) => {\r\n    const urls = text.match(urlPattern) || [];\r\n    return urls;\r\n};\r\n\r\n// Advanced email content analysis\r\nconst analyzeEmailContent = (subject, body) => {\r\n    const fullText = `${subject} ${body}`.toLowerCase();\r\n    let phishingScore = 0;\r\n    let suspiciousElements = [];\r\n    \r\n    // Advanced keyword analysis with weights\r\n    phishingKeywords.forEach(keyword => {\r\n        if (fullText.includes(keyword.toLowerCase())) {\r\n            // Different weights for different types of keywords\r\n            let weight = 10;\r\n            if (keyword.includes('urgent') || keyword.includes('immediate')) weight = 20;\r\n            if (keyword.includes('suspend') || keyword.includes('terminate')) weight = 25;\r\n            if (keyword.includes('verify') || keyword.includes('confirm')) weight = 15;\r\n            if (keyword.includes('click') || keyword.includes('download')) weight = 18;\r\n            \r\n            phishingScore += weight;\r\n            suspiciousElements.push(keyword);\r\n        }\r\n    });\r\n    \r\n    // Pattern analysis\r\n    const patterns = {\r\n        allCaps: /\\b[A-Z]{3,}\\b/g,\r\n        moneyAmounts: /\\$\\d+|\\d+\\s*(USD|EUR|GBP|dollars?|euros?)/gi,\r\n        phoneNumbers: /\\b\\d{3}[-.]?\\d{3}[-.]?\\d{4}\\b/g,\r\n        emails: /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g,\r\n        excessivePunctuation: /[!]{2,}|[?]{2,}/g,\r\n        grammarMistakes: /\\b(recieve|loose|there account|you're account|wont|cant)\\b/gi\r\n    };\r\n    \r\n    Object.entries(patterns).forEach(([patternName, pattern]) => {\r\n        const matches = fullText.match(pattern);\r\n        if (matches) {\r\n            let weight = 5;\r\n            if (patternName === 'allCaps') weight = 8;\r\n            if (patternName === 'moneyAmounts') weight = 15;\r\n            if (patternName === 'grammarMistakes') weight = 12;\r\n            \r\n            phishingScore += matches.length * weight;\r\n            suspiciousElements.push(`${patternName}: ${matches.join(', ')}`);\r\n        }\r\n    });\r\n    \r\n    // URL analysis\r\n    const urls = extractUrls(`${subject} ${body}`);\r\n    const urlAnalysis = urls.map(url => {\r\n        const features = analyzeURLFeatures(url);\r\n        const { score, riskFactors } = calculatePhishingScore(features, url);\r\n        return { url, score, riskFactors, features };\r\n    });\r\n    \r\n    // Add URL scores to overall score\r\n    urlAnalysis.forEach(analysis => {\r\n        phishingScore += analysis.score * 0.8; // URL analysis has high weight\r\n    });\r\n    \r\n    // Domain reputation check\r\n    const maliciousUrls = urlAnalysis.filter(analysis => analysis.score > 60).map(analysis => analysis.url);\r\n    \r\n    // Additional sophisticated heuristics\r\n    const subjectWords = subject.toLowerCase().split(' ');\r\n    const bodyWords = body.toLowerCase().split(' ');\r\n    \r\n    // Length analysis\r\n    if (subject.length > 100) phishingScore += 10;\r\n    if (subject.length < 10 && body.length < 50) phishingScore += 15;\r\n    \r\n    // Word analysis\r\n    const totalWords = subjectWords.length + bodyWords.length;\r\n    const uniqueWords = new Set([...subjectWords, ...bodyWords]).size;\r\n    const repetitionRatio = 1 - (uniqueWords / totalWords);\r\n    if (repetitionRatio > 0.3) phishingScore += 10;\r\n    \r\n    // Specific phishing indicators\r\n    if (fullText.includes('congratulations') && fullText.includes('winner')) phishingScore += 25;\r\n    if (fullText.includes('inheritance') || fullText.includes('lottery')) phishingScore += 30;\r\n    if (fullText.includes('fbi') || fullText.includes('irs') || fullText.includes('government')) phishingScore += 20;\r\n    \r\n    // Cap the score at 100\r\n    phishingScore = Math.min(phishingScore, 100);\r\n    \r\n    return {\r\n        score: phishingScore,\r\n        suspiciousElements: [...new Set(suspiciousElements)],\r\n        urls,\r\n        maliciousUrls,\r\n        urlAnalysis\r\n    };\r\n};\r\n\r\n// Advanced email API with improved detection\r\nexport const emailAPI = {\r\n    predictPhishing: async (emailData) => {\r\n        await simulateDelay();\r\n        \r\n        const { subject, body } = emailData;\r\n        const analysis = analyzeEmailContent(subject, body);\r\n        \r\n        // More sophisticated confidence calculation\r\n        const baseConfidence = analysis.score;\r\n        let confidence = baseConfidence;\r\n        \r\n        // Adjust confidence based on multiple factors\r\n        if (analysis.urlAnalysis.length > 0) {\r\n            const avgUrlScore = analysis.urlAnalysis.reduce((sum, url) => sum + url.score, 0) / analysis.urlAnalysis.length;\r\n            confidence = (confidence + avgUrlScore) / 2;\r\n        }\r\n        \r\n        // Ensure confidence is realistic\r\n        confidence = Math.max(70, Math.min(98, confidence));\r\n        \r\n        const isPhishing = analysis.score > 40; // Lower threshold for better detection\r\n        \r\n        // Generate detailed URL predictions\r\n        const urlPredictions = analysis.urlAnalysis.map(urlAnalysis => ({\r\n            url: urlAnalysis.url,\r\n            prediction: urlAnalysis.score > 50 ? 'Phishing' : 'Safe',\r\n            confidence: Math.min(95, Math.max(75, urlAnalysis.score)),\r\n            risk_factors: urlAnalysis.riskFactors\r\n        }));\r\n        \r\n        // Generate comprehensive reason\r\n        let reason = isPhishing ? \r\n            'Multiple phishing indicators detected' : \r\n            'Content appears legitimate';\r\n            \r\n        if (analysis.maliciousUrls.length > 0) {\r\n            reason += ` - ${analysis.maliciousUrls.length} suspicious URL(s) found`;\r\n        }\r\n        if (analysis.suspiciousElements.length > 5) {\r\n            reason += ' - High number of suspicious patterns';\r\n        }\r\n        \r\n        return {\r\n            prediction: isPhishing ? 'Phishing Email' : 'Safe Email',\r\n            confidence: Math.round(confidence),\r\n            reason,\r\n            analysis_type: 'Advanced Heuristic Analysis',\r\n            total_links: analysis.urls.length,\r\n            malicious_links: analysis.maliciousUrls,\r\n            suspicious_patterns: analysis.suspiciousElements,\r\n            url_predictions: urlPredictions,\r\n            risk_score: Math.round(analysis.score)\r\n        };\r\n    },\r\n\r\n    batchPredict: async (emailsData) => {\r\n        await simulateDelay(2000);\r\n        \r\n        const results = [];\r\n        for (const email of emailsData.emails) {\r\n            const result = await emailAPI.predictPhishing(email);\r\n            results.push(result);\r\n        }\r\n        \r\n        return { results };\r\n    },\r\n\r\n    healthCheck: async () => {\r\n        await simulateDelay(500);\r\n        \r\n        return {\r\n            status: 'healthy',\r\n            models_loaded: true,\r\n            message: 'Advanced frontend analysis engine ready',\r\n            version: '3.0.0-advanced',\r\n            features: [\r\n                'Multi-pattern keyword detection',\r\n                'Advanced URL analysis',\r\n                'Grammar and style analysis',\r\n                'Domain reputation checking',\r\n                'Behavioral pattern recognition'\r\n            ]\r\n        };\r\n    }\r\n};\r\n\r\n// Advanced URL analysis API\r\nexport const urlAPI = {\r\n    predictURL: async (urlData) => {\r\n        await simulateDelay(1200);\r\n        \r\n        const { url } = urlData;\r\n        const features = analyzeURLFeatures(url);\r\n        const { score, riskFactors } = calculatePhishingScore(features, url);\r\n        \r\n        // Determine prediction based on sophisticated scoring\r\n        const isPhishing = score > 50;\r\n        \r\n        // Calculate confidence (removing randomness for consistency)\r\n        let confidence = score;\r\n        if (features.invalid_url) {\r\n            confidence = 95;\r\n        } else {\r\n            // Adjust confidence based on feature certainty\r\n            if (features.is_ip) confidence = Math.max(confidence, 85);\r\n            if (features.subdomain_count > 3) confidence = Math.max(confidence, 80);\r\n            if (!features.uses_https) confidence = Math.max(confidence, 75);\r\n        }\r\n        \r\n        confidence = Math.min(98, Math.max(65, confidence));\r\n        \r\n        return {\r\n            prediction: isPhishing ? 'Phishing' : 'Safe',\r\n            confidence: Math.round(confidence),\r\n            features,\r\n            analysis_method: 'Advanced URL Feature Analysis',\r\n            risk_factors: riskFactors,\r\n            threat_score: Math.round(score),\r\n            security_indicators: {\r\n                uses_https: features.uses_https,\r\n                has_suspicious_domain: features.has_suspicious_words,\r\n                url_length_risk: features.url_length > 75 ? 'High' : features.url_length > 50 ? 'Medium' : 'Low',\r\n                domain_reputation: features.is_ip ? 'Very Poor' : \r\n                                  features.subdomain_count > 2 ? 'Poor' : 'Acceptable'\r\n            }\r\n        };\r\n    },\r\n\r\n    trainEnhancedModel: async () => {\r\n        await simulateDelay(3000);\r\n        \r\n        return {\r\n            status: 'success',\r\n            message: 'Advanced model training completed',\r\n            accuracy: 0.94 + Math.random() * 0.03,\r\n            training_time: '2 minutes',\r\n            model_features: [\r\n                'Enhanced keyword detection (50+ patterns)',\r\n                'URL structure analysis (15+ features)',\r\n                'Domain reputation scoring',\r\n                'Pattern recognition algorithms',\r\n                'Multi-layered threat assessment'\r\n            ],\r\n            improvements: [\r\n                'Reduced false positives by 35%',\r\n                'Improved suspicious URL detection by 40%',\r\n                'Enhanced confidence scoring accuracy'\r\n            ]\r\n        };\r\n    }\r\n};\r\n\r\nconst mockAPI = { emailAPI, urlAPI };\r\n\r\nexport default mockAPI;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}